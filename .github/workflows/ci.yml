name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Build & Test Backend
        run: |
          cd backend/restful-web-services
          mvn clean install -U

      - name: Run Tests & Generate Coverage
        run: |
          cd backend/restful-web-services
          mvn test jacoco:report

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/restful-web-services/target/site/jacoco

      - name: Upload Compiled Java Classes
        uses: actions/upload-artifact@v4
        with:
          name: backend-classes
          path: backend/restful-web-services/target/classes

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          cd frontend/todo
          npm install

      - name: Run Frontend Tests & Generate Coverage
        run: |
          cd frontend/todo
          npm run test -- --watch=false --browsers=ChromeHeadlessNoSandbox --code-coverage

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/todo/coverage

  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache SonarQube Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Restore Compiled Java Classes
        uses: actions/download-artifact@v4
        with:
          name: backend-classes
          path: backend/restful-web-services/target/classes
      
      - name: Restore Frontend Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/todo/coverage

      - name: Restore backend Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: backend/restful-web-services/target/site/jacoco

      - name: Run SonarQube Analysis
        run: |
          npx sonar-scanner -Dsonar.token=${{ secrets.SONAR_TOKEN }}

      - name: Check SonarQube Quality Gate
        run: |
          sleep 10
          RESPONSE=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=fullapp_todoapp")
          
          echo "SonarQube Quality Gate Response:"
          echo "$RESPONSE" | jq .

          STATUS=$(echo "$RESPONSE" | jq -r .projectStatus.status)

          if [[ "$STATUS" != "OK" ]]; then
            echo "❌ Quality Gate Failed!"
            exit 1
          else
            echo "✅ Quality Gate Passed!"
          fi
        shell: bash
